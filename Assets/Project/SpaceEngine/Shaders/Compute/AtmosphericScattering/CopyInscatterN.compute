/**
 * Author: Eric Bruneton
 * Modified and ported to Unity by Justin Hawkins 2014
 */
 
// adds deltaS into S (line 11 in algorithm 4.1)
#pragma kernel CSMain

#include "Assets/Project/SpaceEngine/Shaders/PreprocessCommon.cginc"

int layer;

Texture3D<float4> inscatterRead;
Texture3D<float4> deltaSRead;

RWTexture3D<float4> inscatterWrite;

[numthreads(NUM_THREADS,NUM_THREADS,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 dhdH;
    float mu, muS, nu, r;  
    float2 coords = float2(id.xy) + 0.5; 
    
    GetLayer(layer, r, dhdH); 
    GetMuMuSNu(coords, r, dhdH, mu, muS, nu); 
    
    uint3 idx = uint3(id.xy, layer);
    
    inscatterWrite[idx] = inscatterRead[idx] + float4(deltaSRead[idx].rgb / PhaseFunctionR(nu), 0.0); 
}