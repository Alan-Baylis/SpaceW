#pragma kernel CSMain

#define threadsPerGroup_X 32
#define threadsPerGroup_Y 32
#define nVerticesPerSide 128

#include "TCCommon.cginc"

struct GenerationConstants
{
    float scale;
    float noiseSeaLevel;
    float spacing;
    float4 patchCenter;
};

struct InputStruct
{
	float2 uv1;
	float2 uv2;
};

struct OutputStruct
{
    float4 pos;
};

StructuredBuffer<GenerationConstants> terrainGenerationConstants;
RWStructuredBuffer<InputStruct> patchInput;
RWStructuredBuffer<OutputStruct> patchOutput;

[numthreads(threadsPerGroup_X, threadsPerGroup_Y, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int outBuffOffset = id.x + id.y * nVerticesPerSide;

    GenerationConstants constants = terrainGenerationConstants[0];

    float3 sampleCoord = float3(patchInput[outBuffOffset].uv1, 0);

	float noise = HeightMapAsteroid(sampleCoord, 0.5, 0.75, 0.45, 0.25, 0.35);

    float height = noise / 2;

    float4 output = float4(-1 + id.x * constants.spacing, height, -1 + id.y * constants.spacing, 1);

    patchOutput[outBuffOffset].pos = output;
}