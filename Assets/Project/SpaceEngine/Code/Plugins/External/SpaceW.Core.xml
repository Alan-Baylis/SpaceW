<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpaceW.Core</name>
    </assembly>
    <members>
        <member name="T:SpaceEngine.Core.Numerics.Constants">
            <summary>
                Provides common mathematical and physical constants.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.Rad2Deg">
            <summary>
              <para>Radians-to-degrees conversion constant (Read Only).</para>
            Originally equals to <code>180.0 / Math.PI</code>
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.Deg2Rad">
            <summary>
              <para>Degrees-to-radians conversion constant (Read Only).</para>
            Originally equals to <code>Math.PI / 180.0</code>
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.E">
            <summary>
                Represents the natural logarithmic base, specified by the constant, e.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.Pi">
            <summary>
                Represents the ratio of the circumference of a circle to its diameter, specified
                by the constant, π.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.Tau">
            <summary>
                Represents the ratio of the circumference of a circle to its radius, specified
                by the constant, τ.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.C">
            <summary>
                The speed of light in a vacuum, in meters per second.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Constants.G">
            <summary>
                The gravitational constant, in meters cubed per kilogram second squared.
            </summary>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Functions">
            <summary>
                Provides static methods for trigonometric, logarithmic, and other common mathematical functions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Fibonnacci(System.Int32)">
            <summary>
                Returns the nth fibonnacci number.
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Barycentric(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined
                by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting
                factor for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting
                factor for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>
                Cartesian coordinate of the specified point with respect to the axis being
                used.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Lerp(System.Single,System.Single,System.Single)">
            <summary>
                Performs a linear interpolation between two values.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The linear interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Lerp(System.Double,System.Double,System.Double)">
            <summary>
                Performs a linear interpolation between two values.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The linear interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Hermite(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">First value.</param>
            <param name="tangent1">First tangent.</param>
            <param name="value2">Second value.</param>
            <param name="tangent2">Second tangent.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The Hermite spline interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.CatmullRom(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first value.</param>
            <param name="value2">The second value.</param>
            <param name="value3">The third value.</param>
            <param name="value4">The fourth value.</param>
            <param name="amount">
                Value between 0 and 1 indicating the weight between <paramref name="value2" /> and
                <paramref name="value3" />.
            </param>
            <returns>The Catmull-Rom interpolation of the four values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.SmoothStep(System.Double,System.Double,System.Double)">
            <summary>
                The function interpolates smoothly between two input values based on a third one that should be between the first
                two.
                The returned value is clamped between 0 and 1.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The smooth interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.SmootherStep(System.Double,System.Double,System.Double)">
            <summary>
                The function interpolates smoothly between two input values based on a third one that should be between the first
                two.
                The returned value is clamped between 0 and 1.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The smooth interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.IsPowerOf2(System.Int32)">
            <summary>
                Checks if a number is a power of 2.
            </summary>
            <param name="value">A number to check.</param>
            <returns>true if value is a power of two, otherwise false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.IsPowerOf2(System.Int64)">
            <summary>
                Checks if a number is a power of 2.
            </summary>
            <param name="value">A number to check.</param>
            <returns>true if value is a power of two, otherwise false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.ModPow(System.Int64,System.Int64,System.Int64)">
            <summary>
                Performs modulus division on a number raised to the power of another number.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <param name="modulus">The value to divide valueexponent by.</param>
            <returns>The remainder after dividing valueexponent by modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.ModPow(System.Int32,System.Int32,System.Int32)">
            <summary>
                Performs modulus division on a number raised to the power of another number.
            </summary>
            <param name="value">The number to raise to the exponent power.</param>
            <param name="exponent">The exponent to raise value by.</param>
            <param name="modulus">The value to divide valueexponent by.</param>
            <returns>The remainder after dividing valueexponent by modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.ToDegrees(System.Double)">
            <summary>
                Converts a number in radians to degrees.
            </summary>
            <param name="radians">A number in radians.</param>
            <returns>The number converted to degrees.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.ToRadians(System.Double)">
            <summary>
                Converts a number in degrees to radians.
            </summary>
            <param name="degrees">A number in degrees.</param>
            <returns>The number converted to radians.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sin(System.Double)">
            <summary>
                Returns the sine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The sine of a.
                If a is equal to System.Double.NaN, System.Double.NegativeInfinity,
                or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sin(System.Single)">
            <summary>
                Returns the sine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The sine of a.
                If a is equal to System.Single.NaN, System.Single.NegativeInfinity,
                or System.Single.PositiveInfinity, this method returns System.Single.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Cos(System.Double)">
            <summary>
                Returns the cosine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The cosine of a.
                If a is equal to System.Double.NaN, System.Double.NegativeInfinity,
                or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Cos(System.Single)">
            <summary>
                Returns the cosine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The cosine of a.
                If a is equal to System.Single.NaN, System.Single.NegativeInfinity,
                or System.Single.PositiveInfinity, this method returns System.Single.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Tan(System.Double)">
            <summary>
                Returns the tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The tangent of a.
                If a is equal to System.Double.NaN, System.Double.NegativeInfinity,
                or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Tan(System.Single)">
            <summary>
                Returns the tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The tangent of a.
                If a is equal to System.Single.NaN, System.Single.NegativeInfinity,
                or System.Single.PositiveInfinity, this method returns System.Single.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Acos(System.Double)">
            <summary>
                Returns the angle whose cosine is the specified number.
            </summary>
            <param name="x">A number representing a cosine, where -1 ≤ x ≤ 1.</param>
            <returns>
                An angle, θ, measured in radians, such that 0 ≤ θ ≤ π
                or System.Double.NaN if x &lt; -1 or x > 1.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Acos(System.Single)">
            <summary>
                Returns the angle whose cosine is the specified number.
            </summary>
            <param name="x">A number representing a cosine, where -1 ≤ x ≤ 1.</param>
            <returns>
                An angle, θ, measured in radians, such that 0 ≤ θ ≤ π
                or System.Single.NaN if x &lt; -1 or x > 1.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Asin(System.Double)">
            <summary>
                Returns the angle whose sine is the specified number.
            </summary>
            <param name="x">A number representing a sine, where -1 ≤ x ≤ 1.</param>
            <returns>
                An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2
                or System.Double.NaN if x &lt; -1 or x > 1.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Asin(System.Single)">
            <summary>
                Returns the angle whose sine is the specified number.
            </summary>
            <param name="x">A number representing a sine, where -1 ≤ x ≤ 1.</param>
            <returns>
                An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2
                or System.Single.NaN if x &lt; -1 or x > 1.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atan(System.Double)">
            <summary>
                Returns the angle whose tangent is the specified number.
            </summary>
            <param name="x">A number representing a tangent.</param>
            <returns>
                An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.
                or System.Double.NaN if x equals System.Double.NaN,
                or -π/2 if x equals System.Double.NegativeInfinity,
                or π/2 if x equals System.Double.PositiveInfinity.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atan(System.Single)">
            <summary>
                Returns the angle whose tangent is the specified number.
            </summary>
            <param name="x">A number representing a tangent.</param>
            <returns>
                An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.
                or System.Single.NaN if x equals System.Single.NaN,
                or -π/2 if x equals System.Single.NegativeInfinity,
                or π/2 if x equals System.Single.PositiveInfinity.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atan2(System.Double,System.Double)">
            <summary>
                Returns the angle whose tangent is the quotient of two specified numbers.
            </summary>
            <param name="y">The y coordinate of a point.</param>
            <param name="x">The x coordinate of a point.</param>
            <returns>
                An angle, θ, measured in radians, such that -π ≤ θ ≤ π, and tan(θ) = y / x, where
                (x, y) is a point in the Cartesian plane.
                Observe the following:
                For (x, y) in quadrant 1, 0 &lt; θ &lt; π/2.
                For (x, y) in quadrant 2, π/2 &lt; θ ≤ π.
                For (x, y) in quadrant 3, -π &lt; θ &lt; -π/2.
                For (x, y) in quadrant 4, -π/2 &lt; θ &lt; 0.
                For points on the boundaries of the quadrants, the return value is the following:
                If y is 0 and x is not negative, θ = 0.
                If y is 0 and x is negative, θ = π.
                If y is positive and x is 0, θ = π/2.
                If y is negative and x is 0, θ = -π/2.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atan2(System.Single,System.Single)">
            <summary>
                Returns the angle whose tangent is the quotient of two specified numbers.
            </summary>
            <param name="y">The y coordinate of a point.</param>
            <param name="x">The x coordinate of a point.</param>
            <returns>
                An angle, θ, measured in radians, such that -π ≤ θ ≤ π, and tan(θ) = y / x, where
                (x, y) is a point in the Cartesian plane.
                Observe the following:
                For (x, y) in quadrant 1, 0 &lt; θ &lt; π/2.
                For (x, y) in quadrant 2, π/2 &lt; θ ≤ π.
                For (x, y) in quadrant 3, -π &lt; θ &lt; -π/2.
                For (x, y) in quadrant 4, -π/2 &lt; θ &lt; 0.
                For points on the boundaries of the quadrants, the return value is the following:
                If y is 0 and x is not negative, θ = 0.
                If y is 0 and x is negative, θ = π.
                If y is positive and x is 0, θ = π/2.
                If y is negative and x is 0, θ = -π/2.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Cosh(System.Double)">
            <summary>
                Returns the hyperbolic cosine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic cosine of value.
                If value is equal to System.Double.NegativeInfinity
                or System.Double.PositiveInfinity, System.Double.PositiveInfinity is returned.
                If value is equal to System.Double.NaN, System.Double.NaN is returned.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Cosh(System.Single)">
            <summary>
                Returns the hyperbolic cosine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic cosine of value.
                If value is equal to System.Single.NegativeInfinity
                or System.Single.PositiveInfinity, System.Single.PositiveInfinity is returned.
                If value is equal to System.Single.NaN, System.Single.NaN is returned.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sinh(System.Double)">
            <summary>
                Returns the hyperbolic sine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic sine of value.
                If value is equal to System.Double.NegativeInfinity,
                System.Double.PositiveInfinity, or System.Double.NaN,
                this method returns a System.Double equal to value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sinh(System.Single)">
            <summary>
                Returns the hyperbolic sine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic sine of value.
                If value is equal to System.Single.NegativeInfinity,
                System.Single.PositiveInfinity, or System.Single.NaN,
                this method returns a System.Single equal to value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Tanh(System.Double)">
            <summary>
                Returns the hyperbolic tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic tangent of value.
                If value is equal to System.Double.NegativeInfinity, this method returns -1.
                If value is equal to System.Double.PositiveInfinity, this method returns 1.
                If value is equal to System.Double.NaN, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Tanh(System.Single)">
            <summary>
                Returns the hyperbolic tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
                The hyperbolic tangent of value.
                If value is equal to System.Single.NegativeInfinity, this method returns -1.
                If value is equal to System.Single.PositiveInfinity, this method returns 1.
                If value is equal to System.Single.NaN, this method returns System.Single.NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Acosh(System.Double)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic cosine is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic cosine, where 1 ≤ x.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
            <returns>System.Double.NaN if x &lt; 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Acosh(System.Single)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic cosine is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic cosine, where 1 ≤ x.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
            <returns>System.Single.NaN if x &lt; 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Asinh(System.Double)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic sine is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic sine.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Asinh(System.Single)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic sine is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic sine.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atanh(System.Double)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic tangent is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic tangent, where |x| ≤ 1.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
            <returns>System.Double.NaN if |x| ≥ 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Atanh(System.Single)">
            <summary>
                Returns the hyperbolic angle whose hyperbolic tangent is the specified number.
            </summary>
            <param name="x">A number representing a hyperbolic tangent, where |x| ≤ 1.</param>
            <returns>A hyperbolic angle, θ, measured in radians.</returns>
            <returns>System.Single.NaN if |d| ≥ 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Exp(System.Double)">
            <summary>
                Returns e raised to the specified power.
            </summary>
            <param name="x">A number specifying a power.</param>
            <returns>
                The number e raised to the power x.
                If x equals System.Double.NaN or System.Double.PositiveInfinity, that value is returned.
                If x equals System.Double.NegativeInfinity, 0 is returned.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Exp(System.Single)">
            <summary>
                Returns e raised to the specified power.
            </summary>
            <param name="x">A number specifying a power.</param>
            <returns>
                The number e raised to the power x.
                If x equals System.Single.NaN or System.Single.PositiveInfinity, that value is returned.
                If x equals System.Single.NegativeInfinity, 0 is returned.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Log(System.Double)">
            <summary>
                Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="x">A number whose logarithm is to be found.</param>
            <returns>
                One of the values in the following table.
                d parameterReturn value Positive
                The natural logarithm of d; that is, ln d, or log edZero System.Double.NegativeInfinityNegative
                System.Double.NaNEqual to System.Double.NaNSystem.Double.NaNEqual to
                System.Double.PositiveInfinitySystem.Double.PositiveInfinity
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Log(System.Single)">
            <summary>
                Returns the natural (base e) logarithm of a specified number.
            </summary>
            <param name="x">A number whose logarithm is to be found.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Pow(System.Double,System.Double)">
            <summary>
                Returns a specified number raised to the specified power.
            </summary>
            <param name="x">A double-precision floating-point number to be raised to a power.</param>
            <param name="y">A double-precision floating-point number that specifies a power.</param>
            <returns>The number x raised to the power y.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Pow(System.Single,System.Single)">
            <summary>
                Returns a specified number raised to the specified power.
            </summary>
            <param name="x">A single-precision floating-point number to be raised to a power.</param>
            <param name="y">A single-precision floating-point number that specifies a power.</param>
            <returns>The number x raised to the power y.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sqrt(System.Double)">
            <summary>
                Returns the square root of a specified number.
            </summary>
            <param name="x">A number.</param>
            <returns>
                The square root of x if x is zero or positive, else returns NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Sqrt(System.Single)">
            <summary>
                Returns the square root of a specified number.
            </summary>
            <param name="x">A number.</param>
            <returns>
                The square root of x if x is zero or positive, else returns NaN.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Fractional(System.Double)">
            <summary>
                Calculates the fractional part of a specified double-precision floating-point number.
            </summary>
            <param name="value">A double-precision floating-point number.</param>
            <returns>
                The fractional part of value; that is, the number that remains after any integral
                digits have been discarded.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Fractional(System.Single)">
            <summary>
                Calculates the fractional part of a specified single-precision floating-point number.
            </summary>
            <param name="value">A single-precision floating-point number.</param>
            <returns>
                The fractional part of value; that is, the number that remains after any integral
                digits have been discarded.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Byte,System.Byte,System.Byte)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.SByte,System.SByte,System.SByte)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Int16,System.Int16,System.Int16)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Int64,System.Int64,System.Int64)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Single,System.Single,System.Single)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Clamp(System.Double,System.Double,System.Double)">
            <summary>
                Constrains a value to a given range.
            </summary>
            <param name="value">A number to constrain.</param>
            <param name="min">The minimum value in the range.</param>
            <param name="max">The maximum value in the range.</param>
            <returns>
                If value is less than min, return min.
                If value is greater than max return max.
                Else return value.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Saturate(System.Single)">
            <summary>
                Clamps a number between 0 and 1.
            </summary>
            <param name="value">A number.</param>
            <returns>value clamped between 0 and 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Saturate(System.Double)">
            <summary>
                Clamps a number between 0 and 1.
            </summary>
            <param name="value">A number.</param>
            <returns>value clamped between 0 and 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Wrap(System.Double,System.Double,System.Double)">
            <summary>
                Wraps a number between min and max.
            </summary>
            <param name="value">The number to wrap.</param>
            <param name="min">The maximum value.</param>
            <param name="max">The minimum value.</param>
            <returns>value wrapped around the range [min, max].</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Wrap(System.Single,System.Single,System.Single)">
            <summary>
                Wraps a number between min and max.
            </summary>
            <param name="value">The number to wrap.</param>
            <param name="min">The maximum value.</param>
            <param name="max">The minimum value.</param>
            <returns>value wrapped around the range [min, max].</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.FloorDivide(System.Int32,System.Int32)">
            <summary>
                Floored division.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The quotient.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.FloorDivide(System.Int64,System.Int64)">
            <summary>
                Floored division.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The quotient.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Divide(System.Int32,System.Int32)">
            <summary>
                Euclidean division.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The quotient.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Divide(System.Int64,System.Int64)">
            <summary>
                Euclidean division.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The quotient.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Modulus(System.Int32,System.Int32)">
            <summary>
                Euclidean modulus.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Modulus(System.Int64,System.Int64)">
            <summary>
                Euclidean modulus.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Modulus(System.Double,System.Double)">
            <summary>
                Euclidean modulus.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.Modulus(System.Single,System.Single)">
            <summary>
                Euclidean modulus.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The modulus.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.GCD(System.Int32,System.Int32)">
            <summary>
                Calculates the greatest common divisor of two numbers.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>
                The greatest common divisor, also known as the greatest common factor,
                or highest common factor, of the two given numbers.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Functions.LCM(System.Int32,System.Int32)">
            <summary>
                Calculates the lowest common multiple of two numbers.
            </summary>
            <param name="a">The first number.</param>
            <param name="b">The second number.</param>
            <returns>
                The lowest common multiple, also known as the least common multiple,
                or smallest common multiple, of the two given numbers.
            </returns>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Geometry.PolarCoordinate">
            <summary>
                Represents a polar coordinate, given by azimuth and radius.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.PolarCoordinate.Rho">
            <summary>
                Radius.
            </summary>
            <remarks>
                The value of rho is always 0 or greater.
            </remarks>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.PolarCoordinate.Theta">
            <summary>
                Azimuth angle, in radians.
            </summary>
            <remarks>
                The value of theta is always between 0 and 2π.
            </remarks>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond">
            <summary>
                Represents a quaternion, of the form (A + Bi + Cj + Dk).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> instance equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> instance with a real number equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.I">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> instance with i equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.J">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> instance with j equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.K">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> instance with k equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.A">
            <summary>
                The real component of the quaternion.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.B">
            <summary>
                The i component of the quaternion.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.C">
            <summary>
                The j component of the quaternion.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.Quaterniond.D">
            <summary>
                The k component of the quaternion.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Geometry.Quaterniond.Item(System.Int32)">
            <summary>
                Returns the indexed component of this quaternion.
            </summary>
            <param name="index">The index of the component.</param>
            <returns>The value of the indexed component.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.#ctor(System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> using the specified value.
            </summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> using the specified values.
            </summary>
            <param name="a">The real component of the quaternion.</param>
            <param name="b">The i component of the quaternion.</param>
            <param name="c">The j component of the quaternion.</param>
            <param name="d">The k component of the quaternion.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_UnaryPlus(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns the identity of a specified quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The identity of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_UnaryNegation(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns the additive inverse of a specified quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Addition(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Adds two quaternions and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Subtraction(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Subtracts one quaternion from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Multiply(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Multiplies one quaternion by another and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Division(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Divides one quaternion by another and returns the result.
            </summary>
            <param name="left">The quaternion to be divided (the dividend).</param>
            <param name="right">The quaternion to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Implicit(System.Double)~SpaceEngine.Core.Numerics.Geometry.Quaterniond">
            <summary>
                Defines an implicit conversion of a double value to a Quaterniond.
            </summary>
            <param name="value">The value to convert to a Quaterniond.</param>
            <returns>A Quaterniond that has all a real component equal to value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Implicit(System.Single)~SpaceEngine.Core.Numerics.Geometry.Quaterniond">
            <summary>
                Defines an implicit conversion of a float value to a Quaterniond.
            </summary>
            <param name="value">The value to convert to a Quaterniond.</param>
            <returns>A Quaterniond that has all a real component equal to value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.Equals(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                quaternion have the same value.
            </summary>
            <param name="other">The quaternion to compare.</param>
            <returns>true if this quaternion and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Equality(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns a value that indicates whether two quaternions are equal.
            </summary>
            <param name="left">The first quaternion to compare.</param>
            <param name="right">The second quaternion to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.op_Inequality(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns a value that indicates whether two quaternions are not equal.
            </summary>
            <param name="left">The first quaternion to compare.</param>
            <param name="right">The second quaternion to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.ToString">
            <summary>
                Converts the value of the current quaternion to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current quaternion to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.ToString(System.String)">
            <summary>
                Converts the value of the current quaternion to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaterniond.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current quaternion to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Geometry.Quaternion">
            <summary>
                Provides static methods for quaternion functions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Equals(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns a value that indicates whether two quaternions are equal.
            </summary>
            <param name="left">The first quaternion to compare.</param>
            <param name="right">The second quaternion to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Dot(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Calculates the dot product (inner product) of two quaternions.
            </summary>
            <param name="left">First source quaternion.</param>
            <param name="right">Second source quaternion.</param>
            <returns>The dot product of the two quaternions.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.FromRotationAxis(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> structure given a rotation and an axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.FromRotationAngles(System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> structure given a yaw, pitch, and roll value.
            </summary>
            <param name="yaw">The yaw of rotation.</param>
            <param name="pitch">The pitch of rotation.</param>
            <param name="roll">The roll of rotation.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.FromMatrix(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> structure given a rotation matrix.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.FromOrientation(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Geometry.Quaterniond" /> structure given a direction and up axis.
            </summary>
            <param name="direction">The direction vector.</param>
            <param name="up">The up axis.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Negative(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns the additive inverse of a quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Add(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Adds two quaternions and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Subtract(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Subtracts one quaternion from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Multiply(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns the product of two quaternions.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Divide(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Divides one quaternion by another and returns the result.
            </summary>
            <param name="left">The quaternion to be divided (the dividend).</param>
            <param name="right">The quaternion to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.All(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Determines whether all components of a quaternion are non-zero.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>true if all components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.All(SpaceEngine.Core.Numerics.Geometry.Quaterniond,System.Predicate{System.Double})">
            <summary>
                Determines whether all components of a quaternion satisfy a condition.
            </summary>
            <param name="value">A quaternion.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if every component of the quaternion passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Any(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Determines whether any component of a quaternion is non-zero.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>true if any components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Any(SpaceEngine.Core.Numerics.Geometry.Quaterniond,System.Predicate{System.Double})">
            <summary>
                Determines whether any components of a quaternion satisfy a condition.
            </summary>
            <param name="value">A quaternion.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if any component of the quaternion passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Real(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Return real part of a quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The real part of a quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Imaginary(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Return imaginary part of a quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The imaginary part of a quaternion.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.AbsoluteSquared(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Computes the absolute squared value of a quaternion and returns the result.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The absolute squared value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Absolute(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Computes the absolute value (or modulus or magnitude) of a quaternion and returns the result.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Normalize(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Computes the normalized value (or unit) of a quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The normalized value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Reciprocal(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Returns the multiplicative inverse of a quaternion.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The reciprocal of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Conjugate(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Computes the conjugate of a quaternion and returns the result.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The conjugate of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Argument(SpaceEngine.Core.Numerics.Geometry.Quaterniond)">
            <summary>
                Computes the argument of a quaternion and returns the result.
            </summary>
            <param name="value">A quaternion.</param>
            <returns>The argument of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Lerp(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond,System.Double)">
            <summary>
                Performs a linear interpolation between two quaternions.
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The linear interpolation of the two quaternions.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula.
                <code>start + (end - start) * amount</code>
                Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1
                will cause <paramref name="end" /> to be returned.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Geometry.Quaternion.Slerp(SpaceEngine.Core.Numerics.Geometry.Quaterniond,SpaceEngine.Core.Numerics.Geometry.Quaterniond,System.Double)">
            <summary>
                Interpolates between two unit quaternions, using spherical linear interpolation.
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end" />.</param>
            <returns>The spherical linear interpolation of the two quaternions.</returns>
            <remarks>
                Passing <paramref name="amount" /> a value of 0 will cause <paramref name="start" /> to be returned; a value of 1
                will cause <paramref name="end" /> to be returned.
            </remarks>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Geometry.SphericalCoordinate">
            <summary>
                Represents a polar coordinate, given by inclination, azimuth and radius.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.SphericalCoordinate.Rho">
            <summary>
                Radius.
            </summary>
            <remarks>
                The value of rho is always 0 or greater.
            </remarks>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.SphericalCoordinate.Theta">
            <summary>
                Azimuth angle, in radians.
            </summary>
            <remarks>
                The value of theta is always between 0 and 2π.
            </remarks>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Geometry.SphericalCoordinate.Phi">
            <summary>
                Inclination  angle, in radians.
            </summary>
            <remarks>
                The value of phi is always between 0 and π.
            </remarks>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Matrix2x2d">
            <summary>
                Represents a 2 by 2 matrix of doubles.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" /> with all of its elements equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" /> with all of its elements equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.Identity">
            <summary>
                Returns the identity <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" />.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.M11">
            <summary>
                Gets the element of the matrix that exists in the first row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.M21">
            <summary>
                Gets the element of the matrix that exists in the second row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.M12">
            <summary>
                Gets the element of the matrix that exists in the first row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix2x2d.M22">
            <summary>
                Gets the element of the matrix that exists in the second row and second column.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.RotationZ(System.Double)">
            <summary>
                Creates a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.Scaling(System.Double,System.Double)">
            <summary>
                Creates a matrix that scales along the x-axis and y-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Matrix2x2d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.Equals(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                matrix have the same value.
            </summary>
            <param name="other">The matrix to compare.</param>
            <returns>true if this matrix and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.Equals(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.op_Equality(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.op_Inequality(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a value that indicates whether two matrices are not equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.ToString">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.ToString(System.String)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix2x2d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Matrix">
            <summary>
                Provides static methods for matrix functions.
            </summary>
            <summary>
                Provides static methods for matrix functions.
            </summary>
            <summary>
                Provides static methods for matrix functions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Submatrix(SpaceEngine.Core.Numerics.Matrix2x2d,System.Int32,System.Int32)">
            <summary>
                Returns the specified submatrix of the given matrix.
            </summary>
            <param name="matrix">The matrix whose submatrix is to returned.</param>
            <param name="row">The row to be removed.</param>
            <param name="column">The column to be removed.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Transpose(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Calculates the transpose of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Determines whether all elements of a matrix are non-zero.
            </summary>
            <param name="value">A matrix.</param>
            <returns>true if all elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix2x2d,System.Predicate{System.Double})">
            <summary>
                Determines whether all elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A matrix.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if every element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Determines whether any element of a matrix is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix2x2d,System.Predicate{System.Double})">
            <summary>
                Determines whether any elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if any element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Map(SpaceEngine.Core.Numerics.Matrix2x2d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the elements of a matrix and returns the result.
            </summary>
            <param name="value">The matrix to map.</param>
            <param name="mapping">A mapping function to apply to each element.</param>
            <returns>The result of mapping each element of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Modulate(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Multiplys the elements of two matrices and returns the result.
            </summary>
            <param name="left">The first matrix to modulate.</param>
            <param name="right">The second matrix to modulate.</param>
            <returns>The result of multiplying each element of left by the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Abs(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns the absolute value (per element).
            </summary>
            <param name="value">A matrix.</param>
            <returns>The absolute value (per element) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Min(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix that contains the lowest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The lowest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Max(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix that contains the highest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The highest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Clamp(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Constrains each element to a given range.
            </summary>
            <param name="value">A matrix to constrain.</param>
            <param name="min">The minimum values for each element.</param>
            <param name="max">The maximum values for each element.</param>
            <returns>A matrix with each element constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Saturate(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Constrains each element to the range 0 to 1.
            </summary>
            <param name="value">A matrix to saturate.</param>
            <returns>A matrix with each element constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Ceiling(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix where each element is the smallest integral value that
                is greater than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Floor(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix where each element is the largest integral value that
                is less than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Truncate(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix where each element is the integral part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Fractional(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix where each element is the fractional part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix2x2d,System.Int32)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix2x2d,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix2x2d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Reciprocal(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Calculates the reciprocal of each element in the matrix.
            </summary>
            <param name="value">A matrix.</param>
            <returns>A matrix with the reciprocal of each of values elements.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix2x2d,System.Double@)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
            <param name="determinant">When the method completes, contains the determinant of the matrix.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Determinant(SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Calculates the determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Submatrix(SpaceEngine.Core.Numerics.Matrix3x3d,System.Int32,System.Int32)">
            <summary>
                Returns the specified submatrix of the given matrix.
            </summary>
            <param name="matrix">The matrix whose submatrix is to returned.</param>
            <param name="row">The row to be removed.</param>
            <param name="column">The column to be removed.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Transpose(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Calculates the transpose of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Determines whether all elements of a matrix are non-zero.
            </summary>
            <param name="value">A matrix.</param>
            <returns>true if all elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix3x3d,System.Predicate{System.Double})">
            <summary>
                Determines whether all elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A matrix.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if every element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Determines whether any element of a matrix is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix3x3d,System.Predicate{System.Double})">
            <summary>
                Determines whether any elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if any element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Map(SpaceEngine.Core.Numerics.Matrix3x3d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the elements of a matrix and returns the result.
            </summary>
            <param name="value">The matrix to map.</param>
            <param name="mapping">A mapping function to apply to each element.</param>
            <returns>The result of mapping each element of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Modulate(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Multiplys the elements of two matrices and returns the result.
            </summary>
            <param name="left">The first matrix to modulate.</param>
            <param name="right">The second matrix to modulate.</param>
            <returns>The result of multiplying each element of left by the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Abs(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns the absolute value (per element).
            </summary>
            <param name="value">A matrix.</param>
            <returns>The absolute value (per element) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Min(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix that contains the lowest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The lowest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Max(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix that contains the highest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The highest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Clamp(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Constrains each element to a given range.
            </summary>
            <param name="value">A matrix to constrain.</param>
            <param name="min">The minimum values for each element.</param>
            <param name="max">The maximum values for each element.</param>
            <returns>A matrix with each element constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Saturate(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Constrains each element to the range 0 to 1.
            </summary>
            <param name="value">A matrix to saturate.</param>
            <returns>A matrix with each element constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Ceiling(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix where each element is the smallest integral value that
                is greater than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Floor(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix where each element is the largest integral value that
                is less than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Truncate(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix where each element is the integral part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Fractional(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix where each element is the fractional part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix3x3d,System.Int32)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix3x3d,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix3x3d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Reciprocal(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Calculates the reciprocal of each element in the matrix.
            </summary>
            <param name="value">A matrix.</param>
            <returns>A matrix with the reciprocal of each of values elements.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix3x3d,System.Double@)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
            <param name="determinant">When the method completes, contains the determinant of the matrix.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Determinant(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Calculates the determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Submatrix(SpaceEngine.Core.Numerics.Matrix4x4d,System.Int32,System.Int32)">
            <summary>
                Returns the specified submatrix of the given matrix.
            </summary>
            <param name="matrix">The matrix whose submatrix is to returned.</param>
            <param name="row">The row to be removed.</param>
            <param name="column">The column to be removed.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Transpose(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Calculates the transpose of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Determines whether all elements of a matrix are non-zero.
            </summary>
            <param name="value">A matrix.</param>
            <returns>true if all elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.All(SpaceEngine.Core.Numerics.Matrix4x4d,System.Predicate{System.Double})">
            <summary>
                Determines whether all elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A matrix.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if every element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Determines whether any element of a matrix is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any elements are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Any(SpaceEngine.Core.Numerics.Matrix4x4d,System.Predicate{System.Double})">
            <summary>
                Determines whether any elements of a matrix satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
                true if any element of the matrix passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Map(SpaceEngine.Core.Numerics.Matrix4x4d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the elements of a matrix and returns the result.
            </summary>
            <param name="value">The matrix to map.</param>
            <param name="mapping">A mapping function to apply to each element.</param>
            <returns>The result of mapping each element of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Modulate(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Multiplys the elements of two matrices and returns the result.
            </summary>
            <param name="left">The first matrix to modulate.</param>
            <param name="right">The second matrix to modulate.</param>
            <returns>The result of multiplying each element of left by the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Abs(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns the absolute value (per element).
            </summary>
            <param name="value">A matrix.</param>
            <returns>The absolute value (per element) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Min(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix that contains the lowest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The lowest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Max(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix that contains the highest value from each pair of elements.
            </summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The highest of each element in left and the matching element in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Clamp(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Constrains each element to a given range.
            </summary>
            <param name="value">A matrix to constrain.</param>
            <param name="min">The minimum values for each element.</param>
            <param name="max">The maximum values for each element.</param>
            <returns>A matrix with each element constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Saturate(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Constrains each element to the range 0 to 1.
            </summary>
            <param name="value">A matrix to saturate.</param>
            <returns>A matrix with each element constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Ceiling(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix where each element is the smallest integral value that
                is greater than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Floor(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix where each element is the largest integral value that
                is less than or equal to the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Truncate(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix where each element is the integral part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Fractional(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix where each element is the fractional part of the specified element.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix4x4d,System.Int32)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix4x4d,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Round(SpaceEngine.Core.Numerics.Matrix4x4d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a matrix where each element is rounded to the nearest integral value.
            </summary>
            <param name="value">A matrix.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Reciprocal(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Calculates the reciprocal of each element in the matrix.
            </summary>
            <param name="value">A matrix.</param>
            <returns>A matrix with the reciprocal of each of values elements.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix4x4d,System.Double@)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
            <param name="determinant">When the method completes, contains the determinant of the matrix.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Invert(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Calculates the inverse of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose inverse is to be calculated.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix.Determinant(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Calculates the determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Matrix3x3d">
            <summary>
                Represents a 3 by 3 matrix of doubles.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" /> with all of its elements equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" /> with all of its elements equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.Identity">
            <summary>
                Returns the identity <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" />.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M11">
            <summary>
                Gets the element of the matrix that exists in the first row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M21">
            <summary>
                Gets the element of the matrix that exists in the second row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M31">
            <summary>
                Gets the element of the matrix that exists in the third row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M12">
            <summary>
                Gets the element of the matrix that exists in the first row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M22">
            <summary>
                Gets the element of the matrix that exists in the second row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M32">
            <summary>
                Gets the element of the matrix that exists in the third row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M13">
            <summary>
                Gets the element of the matrix that exists in the first row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M23">
            <summary>
                Gets the element of the matrix that exists in the second row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix3x3d.M33">
            <summary>
                Gets the element of the matrix that exists in the third row and third column.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.RotationX(System.Double)">
            <summary>
                Creates a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.RotationY(System.Double)">
            <summary>
                Creates a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.RotationZ(System.Double)">
            <summary>
                Creates a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.Scaling(System.Double,System.Double,System.Double)">
            <summary>
                Creates a matrix that scales along the x-axis, y-axis and z-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.Translation(System.Double,System.Double)">
            <summary>
                Creates a matrix that translates along the x-axis and y-axis.
            </summary>
            <param name="x">Translation along the x-axis.</param>
            <param name="y">Translation along the y-axis.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Matrix3x3d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.Equals(SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                matrix have the same value.
            </summary>
            <param name="other">The matrix to compare.</param>
            <returns>true if this matrix and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.Equals(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.op_Equality(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.op_Inequality(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns a value that indicates whether two matrices are not equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.ToString">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.ToString(System.String)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix3x3d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Matrix4x4d">
            <summary>
                Represents a 4 by 4 matrix of doubles.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" /> with all of its elements equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" /> with all of its elements equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.Identity">
            <summary>
                Returns the identity <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" />.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M11">
            <summary>
                Gets the element of the matrix that exists in the first row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M21">
            <summary>
                Gets the element of the matrix that exists in the second row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M31">
            <summary>
                Gets the element of the matrix that exists in the third row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M41">
            <summary>
                Gets the element of the matrix that exists in the fourth row and first column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M12">
            <summary>
                Gets the element of the matrix that exists in the first row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M22">
            <summary>
                Gets the element of the matrix that exists in the second row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M32">
            <summary>
                Gets the element of the matrix that exists in the third row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M42">
            <summary>
                Gets the element of the matrix that exists in the fourth row and second column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M13">
            <summary>
                Gets the element of the matrix that exists in the first row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M23">
            <summary>
                Gets the element of the matrix that exists in the second row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M33">
            <summary>
                Gets the element of the matrix that exists in the third row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M43">
            <summary>
                Gets the element of the matrix that exists in the fourth row and third column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M14">
            <summary>
                Gets the element of the matrix that exists in the first row and fourth column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M24">
            <summary>
                Gets the element of the matrix that exists in the second row and fourth column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M34">
            <summary>
                Gets the element of the matrix that exists in the third row and fourth column.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Matrix4x4d.M44">
            <summary>
                Gets the element of the matrix that exists in the fourth row and fourth column.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.RotationX(System.Double)">
            <summary>
                Creates a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.RotationY(System.Double)">
            <summary>
                Creates a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.RotationZ(System.Double)">
            <summary>
                Creates a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">
                Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis
                toward the origin.
            </param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Scaling(System.Double,System.Double,System.Double)">
            <summary>
                Creates a matrix that scales along the x-axis, y-axis and z-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Translation(System.Double,System.Double,System.Double)">
            <summary>
                Creates a matrix that translates along the x-axis, y-axis and z-axis.
            </summary>
            <param name="x">Translation along the x-axis.</param>
            <param name="y">Translation along the y-axis.</param>
            <param name="z">Translation along the z-axis.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Ortho(SpaceEngine.Core.Numerics.Handedness,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates an orthographic projection matrix.
            </summary>
            <param name="handedness">Handedness of the created matrix.</param>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Perspective(SpaceEngine.Core.Numerics.Handedness,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a perspective projection matrix.
            </summary>
            <param name="handedness">Handedness of the created matrix.</param>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.PerspectiveFov(SpaceEngine.Core.Numerics.Handedness,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a perspective projection matrix based on a field of view.
            </summary>
            <param name="handedness">Handedness of the created matrix.</param>
            <param name="fov">Field of view in the y direction, in radians.</param>
            <param name="aspect">Aspect ratio, defined as view space width divided by height.</param>
            <param name="znear">Minimum z-value of the viewing volume.</param>
            <param name="zfar">Maximum z-value of the viewing volume.</param>
            <returns>The created projection matrix.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Matrix4x4d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Equals(SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                matrix have the same value.
            </summary>
            <param name="other">The matrix to compare.</param>
            <returns>true if this matrix and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.Equals(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.op_Equality(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a value that indicates whether two matrices are equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.op_Inequality(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns a value that indicates whether two matrices are not equal.
            </summary>
            <param name="left">The first matrix to compare.</param>
            <param name="right">The second matrix to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.ToString">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.ToString(System.String)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Matrix4x4d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current matrix to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Vector2d">
            <summary>
                Represents a two component vector of doubles, of the form (X, Y).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> with all of its components equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> with all of its components equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.UnitX">
            <summary>
                Returns the X unit <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> (1, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.UnitY">
            <summary>
                Returns the Y unit <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> (0, 1).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.X">
            <summary>
                The X component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector2d.Y">
            <summary>
                The Y component of the vector.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.Item(System.Int32)">
            <summary>
                Returns the indexed component of this vector.
            </summary>
            <param name="index">The index of the component.</param>
            <returns>The value of the indexed component.</returns>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XX">
            <summary>
                Returns the vector (X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XY">
            <summary>
                Returns the vector (X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YX">
            <summary>
                Returns the vector (Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YY">
            <summary>
                Returns the vector (Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXX">
            <summary>
                Returns the vector (X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXY">
            <summary>
                Returns the vector (X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYX">
            <summary>
                Returns the vector (X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYY">
            <summary>
                Returns the vector (X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXX">
            <summary>
                Returns the vector (Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXY">
            <summary>
                Returns the vector (Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYX">
            <summary>
                Returns the vector (Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYY">
            <summary>
                Returns the vector (Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXXX">
            <summary>
                Returns the vector (X, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXXY">
            <summary>
                Returns the vector (X, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXYX">
            <summary>
                Returns the vector (X, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XXYY">
            <summary>
                Returns the vector (X, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYXX">
            <summary>
                Returns the vector (X, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYXY">
            <summary>
                Returns the vector (X, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYYX">
            <summary>
                Returns the vector (X, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.XYYY">
            <summary>
                Returns the vector (X, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXXX">
            <summary>
                Returns the vector (Y, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXXY">
            <summary>
                Returns the vector (Y, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXYX">
            <summary>
                Returns the vector (Y, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YXYY">
            <summary>
                Returns the vector (Y, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYXX">
            <summary>
                Returns the vector (Y, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYXY">
            <summary>
                Returns the vector (Y, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYYX">
            <summary>
                Returns the vector (Y, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector2d.YYYY">
            <summary>
                Returns the vector (Y, Y, Y, Y).
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.#ctor(System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> using the specified value.
            </summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> using the specified values.
            </summary>
            <param name="x">Value for the X component of the vector.</param>
            <param name="y">Value for the Y component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.#ctor(System.Double[])">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.#ctor(System.Double[],System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
            <param name="offset">Offset to start copying values from.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_UnaryPlus(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the identity of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The identity of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_UnaryNegation(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the additive inverse of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Addition(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Subtraction(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Subtracts one vector from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Multiply(SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Multiply(System.Double,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the product of a scalar and vector.
            </summary>
            <param name="left">The scalar to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Multiply(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="left">The matrix to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Multiply(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Matrix2x2d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="right">The vector to multiply.</param>
            <param name="left">The matrix to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Division(SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="left">The vector to be divided (the dividend).</param>
            <param name="right">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Vector2d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Vector2d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.Equals(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                vector have the same value.
            </summary>
            <param name="other">The vector to compare.</param>
            <returns>true if this vector and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Equality(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.op_Inequality(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a value that indicates whether two vectors are not equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.ToString">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.ToString(System.String)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector2d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Vector">
            <summary>
                Provides static methods for vector functions.
            </summary>
            <summary>
                Provides static methods for vector functions.
            </summary>
            <summary>
                Provides static methods for vector functions.
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Equals(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Dot(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Calculates the dot product (inner product) of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Lerp(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Performs a linear interpolation between two values.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The linear interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Negative(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the additive inverse of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Add(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Subtract(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Subtracts one vectors from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="vector">The vector to multiply.</param>
            <param name="scalar">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Matrix2x2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="matrix">The matrix to multiply.</param>
            <param name="vector">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Divide(SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="vector">The vector to be divided (the dividend).</param>
            <param name="scalar">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Determines whether all components of a vector are non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if all components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector2d,System.Predicate{System.Double})">
            <summary>
                Determines whether all components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if every component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Determines whether any component of a vector is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector2d,System.Predicate{System.Double})">
            <summary>
                Determines whether any components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if any component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.AbsoluteSquared(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Computes the absolute squared value of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute squared value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Absolute(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Computes the absolute value (or modulus or magnitude) of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Normalize(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Computes the normalized value (or unit) of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The normalized value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Map(SpaceEngine.Core.Numerics.Vector2d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the components of a vector and returns the result.
            </summary>
            <param name="value">The vector to map.</param>
            <param name="mapping">A mapping function to apply to each component.</param>
            <returns>The result of mapping each component of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Modulate(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Multiplys the components of two vectors and returns the result.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The result of multiplying each component of left by the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Abs(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the absolute value (per component).
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value (per component) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Min(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector that contains the lowest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The lowest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Max(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector that contains the highest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The highest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Clamp(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Constrains each component to a given range.
            </summary>
            <param name="value">A vector to constrain.</param>
            <param name="min">The minimum values for each component.</param>
            <param name="max">The maximum values for each component.</param>
            <returns>A vector with each component constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Saturate(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Constrains each component to the range 0 to 1.
            </summary>
            <param name="value">A vector to saturate.</param>
            <returns>A vector with each component constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Ceiling(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector where each component is the smallest integral value that
                is greater than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Floor(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector where each component is the largest integral value that
                is less than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Truncate(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector where each component is the integral part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Fractional(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector where each component is the fractional part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector2d,System.Int32)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector2d,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector2d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reciprocal(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Calculates the reciprocal of each component in the vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>A vector with the reciprocal of each of values components.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.CartesianToPolar(SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Transforms a vector in cartesian coordinates to polar coordinates.
            </summary>
            <param name="value">The vector to transform.</param>
            <returns>The polar coordinates of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.PolarToCartesian(SpaceEngine.Core.Numerics.Geometry.PolarCoordinate)">
            <summary>
                Transforms a vector in polar coordinates to cartesian coordinates.
            </summary>
            <param name="value">The vector to transform.</param>
            <returns>The cartesian coordinates of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Barycentric(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d,System.Double,System.Double)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined
                by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting
                factor for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting
                factor for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reflect(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d)">
            <summary>
                Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>
                Reflect only gives the direction of a reflection off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Refract(SpaceEngine.Core.Numerics.Vector2d,SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Returns the refraction of a vector off a surface that has the specified normal, and refractive index.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <param name="index">The refractive index, destination index over source index.</param>
            <returns>The refracted vector.</returns>
            <remarks>
                Refract only gives the direction of a refraction off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Equals(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Lerp(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Performs a linear interpolation between two values.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The linear interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Negative(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the additive inverse of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Add(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Subtract(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Subtracts one vectors from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="vector">The vector to multiply.</param>
            <param name="scalar">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="matrix">The matrix to multiply.</param>
            <param name="vector">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Divide(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="vector">The vector to be divided (the dividend).</param>
            <param name="scalar">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Dot(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Calculates the dot product (inner product) of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Cross(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Calculates the cross product (outer product) of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The cross product of the two vectors.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Determines whether all components of a vector are non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if all components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector3d,System.Predicate{System.Double})">
            <summary>
                Determines whether all components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if every component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Determines whether any component of a vector is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector3d,System.Predicate{System.Double})">
            <summary>
                Determines whether any components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if any component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.AbsoluteSquared(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Computes the absolute squared value of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute squared value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Absolute(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Computes the absolute value (or modulus or magnitude) of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Normalize(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Computes the normalized value (or unit) of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The normalized value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Map(SpaceEngine.Core.Numerics.Vector3d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the components of a vector and returns the result.
            </summary>
            <param name="value">The vector to map.</param>
            <param name="mapping">A mapping function to apply to each component.</param>
            <returns>The result of mapping each component of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Modulate(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Multiplys the components of two vectors and returns the result.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The result of multiplying each component of left by the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Abs(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the absolute value (per component).
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value (per component) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Min(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector that contains the lowest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The lowest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Max(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector that contains the highest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The highest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Clamp(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Constrains each component to a given range.
            </summary>
            <param name="value">A vector to constrain.</param>
            <param name="min">The minimum values for each component.</param>
            <param name="max">The maximum values for each component.</param>
            <returns>A vector with each component constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Saturate(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Constrains each component to the range 0 to 1.
            </summary>
            <param name="value">A vector to saturate.</param>
            <returns>A vector with each component constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Ceiling(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector where each component is the smallest integral value that
                is greater than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Floor(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector where each component is the largest integral value that
                is less than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Truncate(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector where each component is the integral part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Fractional(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector where each component is the fractional part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector3d,System.Int32)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector3d,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector3d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reciprocal(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Calculates the reciprocal of each component in the vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>A vector with the reciprocal of each of values components.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.CartesianToSpherical(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Transforms a vector in cartesian coordinates to spherical coordinates.
            </summary>
            <param name="value">The vector to transform.</param>
            <returns>The spherical coordinates of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.SphericalToCartesian(SpaceEngine.Core.Numerics.Geometry.SphericalCoordinate)">
            <summary>
                Transforms a vector in spherical coordinates to cartesian coordinates.
            </summary>
            <param name="value">The vector to transform.</param>
            <returns>The cartesian coordinates of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Barycentric(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d,System.Double,System.Double)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined
                by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting
                factor for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting
                factor for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reflect(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>
                Reflect only gives the direction of a reflection off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Refract(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Returns the refraction of a vector off a surface that has the specified normal, and refractive index.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <param name="index">The refractive index, destination index over source index.</param>
            <returns>The refracted vector.</returns>
            <remarks>
                Refract only gives the direction of a refraction off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Equals(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Dot(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Calculates the dot product (inner product) of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Lerp(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Performs a linear interpolation between two values.
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="value2" />.</param>
            <returns>The linear interpolation of the two values.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Negative(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the additive inverse of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Add(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Subtract(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Subtracts one vectors from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="vector">The vector to multiply.</param>
            <param name="scalar">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Multiply(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="matrix">The matrix to multiply.</param>
            <param name="vector">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Divide(SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="vector">The vector to be divided (the dividend).</param>
            <param name="scalar">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Determines whether all components of a vector are non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if all components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.All(SpaceEngine.Core.Numerics.Vector4d,System.Predicate{System.Double})">
            <summary>
                Determines whether all components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if every component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Determines whether any component of a vector is non-zero.
            </summary>
            <param name="value">A vector.</param>
            <returns>true if any components are non-zero; false otherwise.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Any(SpaceEngine.Core.Numerics.Vector4d,System.Predicate{System.Double})">
            <summary>
                Determines whether any components of a vector satisfy a condition.
            </summary>
            <param name="value">A vector.</param>
            <param name="predicate">A function to test each component for a condition.</param>
            <returns>
                true if any component of the vector passes the test in the specified
                predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.AbsoluteSquared(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Computes the absolute squared value of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute squared value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Absolute(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Computes the absolute value (or modulus or magnitude) of a vector and returns the result.
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Normalize(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Computes the normalized value (or unit) of a vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The normalized value of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Map(SpaceEngine.Core.Numerics.Vector4d,System.Func{System.Double,System.Double})">
            <summary>
                Maps the components of a vector and returns the result.
            </summary>
            <param name="value">The vector to map.</param>
            <param name="mapping">A mapping function to apply to each component.</param>
            <returns>The result of mapping each component of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Modulate(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Multiplys the components of two vectors and returns the result.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The result of multiplying each component of left by the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Abs(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the absolute value (per component).
            </summary>
            <param name="value">A vector.</param>
            <returns>The absolute value (per component) of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Min(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector that contains the lowest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The lowest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Max(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector that contains the highest value from each pair of components.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The highest of each component in left and the matching component in right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Clamp(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Constrains each component to a given range.
            </summary>
            <param name="value">A vector to constrain.</param>
            <param name="min">The minimum values for each component.</param>
            <param name="max">The maximum values for each component.</param>
            <returns>A vector with each component constrained to the given range.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Saturate(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Constrains each component to the range 0 to 1.
            </summary>
            <param name="value">A vector to saturate.</param>
            <returns>A vector with each component constrained to the range 0 to 1.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Ceiling(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector where each component is the smallest integral value that
                is greater than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The ceiling of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Floor(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector where each component is the largest integral value that
                is less than or equal to the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The floor of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Truncate(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector where each component is the integral part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The integral of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Fractional(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector where each component is the fractional part of the specified component.
            </summary>
            <param name="value">A vector.</param>
            <returns>The fractional of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector4d,System.Int32)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector4d,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Round(SpaceEngine.Core.Numerics.Vector4d,System.Int32,System.MidpointRounding)">
            <summary>
                Returns a vector where each component is rounded to the nearest integral value.
            </summary>
            <param name="value">A vector.</param>
            <param name="digits">The number of fractional digits in the return value.</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers.</param>
            <returns>The result of rounding value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reciprocal(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Calculates the reciprocal of each component in the vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>A vector with the reciprocal of each of values components.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Barycentric(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d,System.Double,System.Double)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined
                by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting
                factor for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting
                factor for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Reflect(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>
                Reflect only gives the direction of a reflection off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector.Refract(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Returns the refraction of a vector off a surface that has the specified normal, and refractive index.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <param name="index">The refractive index, destination index over source index.</param>
            <returns>The refracted vector.</returns>
            <remarks>
                Refract only gives the direction of a refraction off a surface, it does not determine
                whether the original vector was close enough to the surface to hit it.
            </remarks>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Vector3d">
            <summary>
                Represents a three component vector of doubles, of the form (X, Y, Z).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> with all of its components equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> with all of its components equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.UnitX">
            <summary>
                Returns the X unit <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> (1, 0, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.UnitY">
            <summary>
                Returns the Y unit <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> (0, 1, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.UnitZ">
            <summary>
                Returns the Z unit <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> (0, 0, 1).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.X">
            <summary>
                The X component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.Y">
            <summary>
                The Y component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector3d.Z">
            <summary>
                The Z component of the vector.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.Item(System.Int32)">
            <summary>
                Returns the indexed component of this vector.
            </summary>
            <param name="index">The index of the component.</param>
            <returns>The value of the indexed component.</returns>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XX">
            <summary>
                Returns the vector (X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XY">
            <summary>
                Returns the vector (X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZ">
            <summary>
                Returns the vector (X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YX">
            <summary>
                Returns the vector (Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YY">
            <summary>
                Returns the vector (Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZ">
            <summary>
                Returns the vector (Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZX">
            <summary>
                Returns the vector (Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZY">
            <summary>
                Returns the vector (Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZ">
            <summary>
                Returns the vector (Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXX">
            <summary>
                Returns the vector (X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXY">
            <summary>
                Returns the vector (X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXZ">
            <summary>
                Returns the vector (X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYX">
            <summary>
                Returns the vector (X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYY">
            <summary>
                Returns the vector (X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYZ">
            <summary>
                Returns the vector (X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZX">
            <summary>
                Returns the vector (X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZY">
            <summary>
                Returns the vector (X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZZ">
            <summary>
                Returns the vector (X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXX">
            <summary>
                Returns the vector (Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXY">
            <summary>
                Returns the vector (Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXZ">
            <summary>
                Returns the vector (Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYX">
            <summary>
                Returns the vector (Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYY">
            <summary>
                Returns the vector (Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYZ">
            <summary>
                Returns the vector (Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZX">
            <summary>
                Returns the vector (Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZY">
            <summary>
                Returns the vector (Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZZ">
            <summary>
                Returns the vector (Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXX">
            <summary>
                Returns the vector (Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXY">
            <summary>
                Returns the vector (Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXZ">
            <summary>
                Returns the vector (Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYX">
            <summary>
                Returns the vector (Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYY">
            <summary>
                Returns the vector (Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYZ">
            <summary>
                Returns the vector (Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZX">
            <summary>
                Returns the vector (Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZY">
            <summary>
                Returns the vector (Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZZ">
            <summary>
                Returns the vector (Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXXX">
            <summary>
                Returns the vector (X, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXXY">
            <summary>
                Returns the vector (X, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXXZ">
            <summary>
                Returns the vector (X, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXYX">
            <summary>
                Returns the vector (X, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXYY">
            <summary>
                Returns the vector (X, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXYZ">
            <summary>
                Returns the vector (X, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXZX">
            <summary>
                Returns the vector (X, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXZY">
            <summary>
                Returns the vector (X, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XXZZ">
            <summary>
                Returns the vector (X, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYXX">
            <summary>
                Returns the vector (X, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYXY">
            <summary>
                Returns the vector (X, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYXZ">
            <summary>
                Returns the vector (X, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYYX">
            <summary>
                Returns the vector (X, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYYY">
            <summary>
                Returns the vector (X, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYYZ">
            <summary>
                Returns the vector (X, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYZX">
            <summary>
                Returns the vector (X, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYZY">
            <summary>
                Returns the vector (X, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XYZZ">
            <summary>
                Returns the vector (X, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZXX">
            <summary>
                Returns the vector (X, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZXY">
            <summary>
                Returns the vector (X, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZXZ">
            <summary>
                Returns the vector (X, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZYX">
            <summary>
                Returns the vector (X, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZYY">
            <summary>
                Returns the vector (X, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZYZ">
            <summary>
                Returns the vector (X, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZZX">
            <summary>
                Returns the vector (X, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZZY">
            <summary>
                Returns the vector (X, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.XZZZ">
            <summary>
                Returns the vector (X, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXXX">
            <summary>
                Returns the vector (Y, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXXY">
            <summary>
                Returns the vector (Y, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXXZ">
            <summary>
                Returns the vector (Y, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXYX">
            <summary>
                Returns the vector (Y, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXYY">
            <summary>
                Returns the vector (Y, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXYZ">
            <summary>
                Returns the vector (Y, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXZX">
            <summary>
                Returns the vector (Y, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXZY">
            <summary>
                Returns the vector (Y, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YXZZ">
            <summary>
                Returns the vector (Y, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYXX">
            <summary>
                Returns the vector (Y, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYXY">
            <summary>
                Returns the vector (Y, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYXZ">
            <summary>
                Returns the vector (Y, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYYX">
            <summary>
                Returns the vector (Y, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYYY">
            <summary>
                Returns the vector (Y, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYYZ">
            <summary>
                Returns the vector (Y, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYZX">
            <summary>
                Returns the vector (Y, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYZY">
            <summary>
                Returns the vector (Y, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YYZZ">
            <summary>
                Returns the vector (Y, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZXX">
            <summary>
                Returns the vector (Y, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZXY">
            <summary>
                Returns the vector (Y, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZXZ">
            <summary>
                Returns the vector (Y, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZYX">
            <summary>
                Returns the vector (Y, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZYY">
            <summary>
                Returns the vector (Y, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZYZ">
            <summary>
                Returns the vector (Y, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZZX">
            <summary>
                Returns the vector (Y, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZZY">
            <summary>
                Returns the vector (Y, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.YZZZ">
            <summary>
                Returns the vector (Y, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXXX">
            <summary>
                Returns the vector (Z, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXXY">
            <summary>
                Returns the vector (Z, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXXZ">
            <summary>
                Returns the vector (Z, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXYX">
            <summary>
                Returns the vector (Z, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXYY">
            <summary>
                Returns the vector (Z, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXYZ">
            <summary>
                Returns the vector (Z, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXZX">
            <summary>
                Returns the vector (Z, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXZY">
            <summary>
                Returns the vector (Z, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZXZZ">
            <summary>
                Returns the vector (Z, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYXX">
            <summary>
                Returns the vector (Z, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYXY">
            <summary>
                Returns the vector (Z, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYXZ">
            <summary>
                Returns the vector (Z, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYYX">
            <summary>
                Returns the vector (Z, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYYY">
            <summary>
                Returns the vector (Z, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYYZ">
            <summary>
                Returns the vector (Z, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYZX">
            <summary>
                Returns the vector (Z, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYZY">
            <summary>
                Returns the vector (Z, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZYZZ">
            <summary>
                Returns the vector (Z, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZXX">
            <summary>
                Returns the vector (Z, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZXY">
            <summary>
                Returns the vector (Z, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZXZ">
            <summary>
                Returns the vector (Z, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZYX">
            <summary>
                Returns the vector (Z, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZYY">
            <summary>
                Returns the vector (Z, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZYZ">
            <summary>
                Returns the vector (Z, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZZX">
            <summary>
                Returns the vector (Z, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZZY">
            <summary>
                Returns the vector (Z, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector3d.ZZZZ">
            <summary>
                Returns the vector (Z, Z, Z, Z).
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.#ctor(System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> using the specified value.
            </summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.#ctor(SpaceEngine.Core.Numerics.Vector2d,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> using the specified vector and values.
            </summary>
            <param name="value">A vector containing the values with which to initialize the X and Y components</param>
            <param name="z">Value for the Z component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> using the specified values.
            </summary>
            <param name="x">Value for the X component of the vector.</param>
            <param name="y">Value for the Y component of the vector.</param>
            <param name="z">Value for the Z component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.#ctor(System.Double[])">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.#ctor(System.Double[],System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
            <param name="offset">Offset to start copying values from.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_UnaryPlus(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the identity of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The identity of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_UnaryNegation(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the additive inverse of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Addition(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Subtraction(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Subtracts one vector from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Multiply(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Multiply(System.Double,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the product of a scalar and vector.
            </summary>
            <param name="left">The scalar to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Multiply(SpaceEngine.Core.Numerics.Matrix3x3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="left">The matrix to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Multiply(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Matrix3x3d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="right">The vector to multiply.</param>
            <param name="left">The matrix to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Division(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="left">The vector to be divided (the dividend).</param>
            <param name="right">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Vector3d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Vector3d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.Equals(SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                vector have the same value.
            </summary>
            <param name="other">The vector to compare.</param>
            <returns>true if this vector and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Equality(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.op_Inequality(SpaceEngine.Core.Numerics.Vector3d,SpaceEngine.Core.Numerics.Vector3d)">
            <summary>
                Returns a value that indicates whether two vectors are not equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.ToString">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.ToString(System.String)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector3d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="T:SpaceEngine.Core.Numerics.Vector4d">
            <summary>
                Represents a four component vector of doubles, of the form (X, Y, Z, W).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.Zero">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> with all of its components equal to zero.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.One">
            <summary>
                Returns a new <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> with all of its components equal to one.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.UnitX">
            <summary>
                Returns the X unit <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> (1, 0, 0, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.UnitY">
            <summary>
                Returns the Y unit <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> (0, 1, 0, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.UnitZ">
            <summary>
                Returns the Z unit <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> (0, 0, 1, 0).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.UnitW">
            <summary>
                Returns the W unit <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> (0, 0, 0, 1).
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.X">
            <summary>
                The X component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.Y">
            <summary>
                The Y component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.Z">
            <summary>
                The Z component of the vector.
            </summary>
        </member>
        <member name="F:SpaceEngine.Core.Numerics.Vector4d.W">
            <summary>
                The W component of the vector.
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.Item(System.Int32)">
            <summary>
                Returns the indexed component of this vector.
            </summary>
            <param name="index">The index of the component.</param>
            <returns>The value of the indexed component.</returns>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XX">
            <summary>
                Returns the vector (X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XY">
            <summary>
                Returns the vector (X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZ">
            <summary>
                Returns the vector (X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XW">
            <summary>
                Returns the vector (X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YX">
            <summary>
                Returns the vector (Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YY">
            <summary>
                Returns the vector (Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZ">
            <summary>
                Returns the vector (Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YW">
            <summary>
                Returns the vector (Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZX">
            <summary>
                Returns the vector (Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZY">
            <summary>
                Returns the vector (Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZ">
            <summary>
                Returns the vector (Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZW">
            <summary>
                Returns the vector (Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WX">
            <summary>
                Returns the vector (W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WY">
            <summary>
                Returns the vector (W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZ">
            <summary>
                Returns the vector (W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WW">
            <summary>
                Returns the vector (W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXX">
            <summary>
                Returns the vector (X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXY">
            <summary>
                Returns the vector (X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXZ">
            <summary>
                Returns the vector (X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXW">
            <summary>
                Returns the vector (X, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYX">
            <summary>
                Returns the vector (X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYY">
            <summary>
                Returns the vector (X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYZ">
            <summary>
                Returns the vector (X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYW">
            <summary>
                Returns the vector (X, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZX">
            <summary>
                Returns the vector (X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZY">
            <summary>
                Returns the vector (X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZZ">
            <summary>
                Returns the vector (X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZW">
            <summary>
                Returns the vector (X, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWX">
            <summary>
                Returns the vector (X, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWY">
            <summary>
                Returns the vector (X, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWZ">
            <summary>
                Returns the vector (X, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWW">
            <summary>
                Returns the vector (X, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXX">
            <summary>
                Returns the vector (Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXY">
            <summary>
                Returns the vector (Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXZ">
            <summary>
                Returns the vector (Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXW">
            <summary>
                Returns the vector (Y, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYX">
            <summary>
                Returns the vector (Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYY">
            <summary>
                Returns the vector (Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYZ">
            <summary>
                Returns the vector (Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYW">
            <summary>
                Returns the vector (Y, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZX">
            <summary>
                Returns the vector (Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZY">
            <summary>
                Returns the vector (Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZZ">
            <summary>
                Returns the vector (Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZW">
            <summary>
                Returns the vector (Y, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWX">
            <summary>
                Returns the vector (Y, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWY">
            <summary>
                Returns the vector (Y, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWZ">
            <summary>
                Returns the vector (Y, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWW">
            <summary>
                Returns the vector (Y, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXX">
            <summary>
                Returns the vector (Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXY">
            <summary>
                Returns the vector (Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXZ">
            <summary>
                Returns the vector (Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXW">
            <summary>
                Returns the vector (Z, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYX">
            <summary>
                Returns the vector (Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYY">
            <summary>
                Returns the vector (Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYZ">
            <summary>
                Returns the vector (Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYW">
            <summary>
                Returns the vector (Z, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZX">
            <summary>
                Returns the vector (Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZY">
            <summary>
                Returns the vector (Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZZ">
            <summary>
                Returns the vector (Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZW">
            <summary>
                Returns the vector (Z, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWX">
            <summary>
                Returns the vector (Z, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWY">
            <summary>
                Returns the vector (Z, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWZ">
            <summary>
                Returns the vector (Z, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWW">
            <summary>
                Returns the vector (Z, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXX">
            <summary>
                Returns the vector (W, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXY">
            <summary>
                Returns the vector (W, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXZ">
            <summary>
                Returns the vector (W, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXW">
            <summary>
                Returns the vector (W, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYX">
            <summary>
                Returns the vector (W, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYY">
            <summary>
                Returns the vector (W, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYZ">
            <summary>
                Returns the vector (W, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYW">
            <summary>
                Returns the vector (W, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZX">
            <summary>
                Returns the vector (W, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZY">
            <summary>
                Returns the vector (W, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZZ">
            <summary>
                Returns the vector (W, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZW">
            <summary>
                Returns the vector (W, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWX">
            <summary>
                Returns the vector (W, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWY">
            <summary>
                Returns the vector (W, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWZ">
            <summary>
                Returns the vector (W, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWW">
            <summary>
                Returns the vector (W, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXXX">
            <summary>
                Returns the vector (X, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXXY">
            <summary>
                Returns the vector (X, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXXZ">
            <summary>
                Returns the vector (X, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXXW">
            <summary>
                Returns the vector (X, X, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXYX">
            <summary>
                Returns the vector (X, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXYY">
            <summary>
                Returns the vector (X, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXYZ">
            <summary>
                Returns the vector (X, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXYW">
            <summary>
                Returns the vector (X, X, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXZX">
            <summary>
                Returns the vector (X, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXZY">
            <summary>
                Returns the vector (X, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXZZ">
            <summary>
                Returns the vector (X, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXZW">
            <summary>
                Returns the vector (X, X, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXWX">
            <summary>
                Returns the vector (X, X, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXWY">
            <summary>
                Returns the vector (X, X, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXWZ">
            <summary>
                Returns the vector (X, X, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XXWW">
            <summary>
                Returns the vector (X, X, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYXX">
            <summary>
                Returns the vector (X, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYXY">
            <summary>
                Returns the vector (X, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYXZ">
            <summary>
                Returns the vector (X, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYXW">
            <summary>
                Returns the vector (X, Y, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYYX">
            <summary>
                Returns the vector (X, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYYY">
            <summary>
                Returns the vector (X, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYYZ">
            <summary>
                Returns the vector (X, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYYW">
            <summary>
                Returns the vector (X, Y, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYZX">
            <summary>
                Returns the vector (X, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYZY">
            <summary>
                Returns the vector (X, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYZZ">
            <summary>
                Returns the vector (X, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYZW">
            <summary>
                Returns the vector (X, Y, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYWX">
            <summary>
                Returns the vector (X, Y, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYWY">
            <summary>
                Returns the vector (X, Y, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYWZ">
            <summary>
                Returns the vector (X, Y, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XYWW">
            <summary>
                Returns the vector (X, Y, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZXX">
            <summary>
                Returns the vector (X, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZXY">
            <summary>
                Returns the vector (X, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZXZ">
            <summary>
                Returns the vector (X, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZXW">
            <summary>
                Returns the vector (X, Z, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZYX">
            <summary>
                Returns the vector (X, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZYY">
            <summary>
                Returns the vector (X, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZYZ">
            <summary>
                Returns the vector (X, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZYW">
            <summary>
                Returns the vector (X, Z, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZZX">
            <summary>
                Returns the vector (X, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZZY">
            <summary>
                Returns the vector (X, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZZZ">
            <summary>
                Returns the vector (X, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZZW">
            <summary>
                Returns the vector (X, Z, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZWX">
            <summary>
                Returns the vector (X, Z, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZWY">
            <summary>
                Returns the vector (X, Z, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZWZ">
            <summary>
                Returns the vector (X, Z, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XZWW">
            <summary>
                Returns the vector (X, Z, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWXX">
            <summary>
                Returns the vector (X, W, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWXY">
            <summary>
                Returns the vector (X, W, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWXZ">
            <summary>
                Returns the vector (X, W, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWXW">
            <summary>
                Returns the vector (X, W, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWYX">
            <summary>
                Returns the vector (X, W, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWYY">
            <summary>
                Returns the vector (X, W, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWYZ">
            <summary>
                Returns the vector (X, W, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWYW">
            <summary>
                Returns the vector (X, W, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWZX">
            <summary>
                Returns the vector (X, W, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWZY">
            <summary>
                Returns the vector (X, W, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWZZ">
            <summary>
                Returns the vector (X, W, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWZW">
            <summary>
                Returns the vector (X, W, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWWX">
            <summary>
                Returns the vector (X, W, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWWY">
            <summary>
                Returns the vector (X, W, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWWZ">
            <summary>
                Returns the vector (X, W, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.XWWW">
            <summary>
                Returns the vector (X, W, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXXX">
            <summary>
                Returns the vector (Y, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXXY">
            <summary>
                Returns the vector (Y, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXXZ">
            <summary>
                Returns the vector (Y, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXXW">
            <summary>
                Returns the vector (Y, X, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXYX">
            <summary>
                Returns the vector (Y, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXYY">
            <summary>
                Returns the vector (Y, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXYZ">
            <summary>
                Returns the vector (Y, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXYW">
            <summary>
                Returns the vector (Y, X, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXZX">
            <summary>
                Returns the vector (Y, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXZY">
            <summary>
                Returns the vector (Y, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXZZ">
            <summary>
                Returns the vector (Y, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXZW">
            <summary>
                Returns the vector (Y, X, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXWX">
            <summary>
                Returns the vector (Y, X, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXWY">
            <summary>
                Returns the vector (Y, X, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXWZ">
            <summary>
                Returns the vector (Y, X, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YXWW">
            <summary>
                Returns the vector (Y, X, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYXX">
            <summary>
                Returns the vector (Y, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYXY">
            <summary>
                Returns the vector (Y, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYXZ">
            <summary>
                Returns the vector (Y, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYXW">
            <summary>
                Returns the vector (Y, Y, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYYX">
            <summary>
                Returns the vector (Y, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYYY">
            <summary>
                Returns the vector (Y, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYYZ">
            <summary>
                Returns the vector (Y, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYYW">
            <summary>
                Returns the vector (Y, Y, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYZX">
            <summary>
                Returns the vector (Y, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYZY">
            <summary>
                Returns the vector (Y, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYZZ">
            <summary>
                Returns the vector (Y, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYZW">
            <summary>
                Returns the vector (Y, Y, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYWX">
            <summary>
                Returns the vector (Y, Y, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYWY">
            <summary>
                Returns the vector (Y, Y, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYWZ">
            <summary>
                Returns the vector (Y, Y, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YYWW">
            <summary>
                Returns the vector (Y, Y, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZXX">
            <summary>
                Returns the vector (Y, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZXY">
            <summary>
                Returns the vector (Y, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZXZ">
            <summary>
                Returns the vector (Y, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZXW">
            <summary>
                Returns the vector (Y, Z, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZYX">
            <summary>
                Returns the vector (Y, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZYY">
            <summary>
                Returns the vector (Y, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZYZ">
            <summary>
                Returns the vector (Y, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZYW">
            <summary>
                Returns the vector (Y, Z, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZZX">
            <summary>
                Returns the vector (Y, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZZY">
            <summary>
                Returns the vector (Y, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZZZ">
            <summary>
                Returns the vector (Y, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZZW">
            <summary>
                Returns the vector (Y, Z, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZWX">
            <summary>
                Returns the vector (Y, Z, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZWY">
            <summary>
                Returns the vector (Y, Z, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZWZ">
            <summary>
                Returns the vector (Y, Z, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YZWW">
            <summary>
                Returns the vector (Y, Z, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWXX">
            <summary>
                Returns the vector (Y, W, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWXY">
            <summary>
                Returns the vector (Y, W, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWXZ">
            <summary>
                Returns the vector (Y, W, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWXW">
            <summary>
                Returns the vector (Y, W, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWYX">
            <summary>
                Returns the vector (Y, W, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWYY">
            <summary>
                Returns the vector (Y, W, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWYZ">
            <summary>
                Returns the vector (Y, W, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWYW">
            <summary>
                Returns the vector (Y, W, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWZX">
            <summary>
                Returns the vector (Y, W, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWZY">
            <summary>
                Returns the vector (Y, W, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWZZ">
            <summary>
                Returns the vector (Y, W, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWZW">
            <summary>
                Returns the vector (Y, W, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWWX">
            <summary>
                Returns the vector (Y, W, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWWY">
            <summary>
                Returns the vector (Y, W, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWWZ">
            <summary>
                Returns the vector (Y, W, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.YWWW">
            <summary>
                Returns the vector (Y, W, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXXX">
            <summary>
                Returns the vector (Z, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXXY">
            <summary>
                Returns the vector (Z, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXXZ">
            <summary>
                Returns the vector (Z, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXXW">
            <summary>
                Returns the vector (Z, X, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXYX">
            <summary>
                Returns the vector (Z, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXYY">
            <summary>
                Returns the vector (Z, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXYZ">
            <summary>
                Returns the vector (Z, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXYW">
            <summary>
                Returns the vector (Z, X, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXZX">
            <summary>
                Returns the vector (Z, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXZY">
            <summary>
                Returns the vector (Z, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXZZ">
            <summary>
                Returns the vector (Z, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXZW">
            <summary>
                Returns the vector (Z, X, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXWX">
            <summary>
                Returns the vector (Z, X, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXWY">
            <summary>
                Returns the vector (Z, X, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXWZ">
            <summary>
                Returns the vector (Z, X, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZXWW">
            <summary>
                Returns the vector (Z, X, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYXX">
            <summary>
                Returns the vector (Z, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYXY">
            <summary>
                Returns the vector (Z, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYXZ">
            <summary>
                Returns the vector (Z, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYXW">
            <summary>
                Returns the vector (Z, Y, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYYX">
            <summary>
                Returns the vector (Z, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYYY">
            <summary>
                Returns the vector (Z, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYYZ">
            <summary>
                Returns the vector (Z, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYYW">
            <summary>
                Returns the vector (Z, Y, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYZX">
            <summary>
                Returns the vector (Z, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYZY">
            <summary>
                Returns the vector (Z, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYZZ">
            <summary>
                Returns the vector (Z, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYZW">
            <summary>
                Returns the vector (Z, Y, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYWX">
            <summary>
                Returns the vector (Z, Y, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYWY">
            <summary>
                Returns the vector (Z, Y, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYWZ">
            <summary>
                Returns the vector (Z, Y, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZYWW">
            <summary>
                Returns the vector (Z, Y, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZXX">
            <summary>
                Returns the vector (Z, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZXY">
            <summary>
                Returns the vector (Z, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZXZ">
            <summary>
                Returns the vector (Z, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZXW">
            <summary>
                Returns the vector (Z, Z, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZYX">
            <summary>
                Returns the vector (Z, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZYY">
            <summary>
                Returns the vector (Z, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZYZ">
            <summary>
                Returns the vector (Z, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZYW">
            <summary>
                Returns the vector (Z, Z, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZZX">
            <summary>
                Returns the vector (Z, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZZY">
            <summary>
                Returns the vector (Z, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZZZ">
            <summary>
                Returns the vector (Z, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZZW">
            <summary>
                Returns the vector (Z, Z, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZWX">
            <summary>
                Returns the vector (Z, Z, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZWY">
            <summary>
                Returns the vector (Z, Z, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZWZ">
            <summary>
                Returns the vector (Z, Z, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZZWW">
            <summary>
                Returns the vector (Z, Z, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWXX">
            <summary>
                Returns the vector (Z, W, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWXY">
            <summary>
                Returns the vector (Z, W, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWXZ">
            <summary>
                Returns the vector (Z, W, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWXW">
            <summary>
                Returns the vector (Z, W, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWYX">
            <summary>
                Returns the vector (Z, W, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWYY">
            <summary>
                Returns the vector (Z, W, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWYZ">
            <summary>
                Returns the vector (Z, W, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWYW">
            <summary>
                Returns the vector (Z, W, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWZX">
            <summary>
                Returns the vector (Z, W, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWZY">
            <summary>
                Returns the vector (Z, W, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWZZ">
            <summary>
                Returns the vector (Z, W, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWZW">
            <summary>
                Returns the vector (Z, W, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWWX">
            <summary>
                Returns the vector (Z, W, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWWY">
            <summary>
                Returns the vector (Z, W, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWWZ">
            <summary>
                Returns the vector (Z, W, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.ZWWW">
            <summary>
                Returns the vector (Z, W, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXXX">
            <summary>
                Returns the vector (W, X, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXXY">
            <summary>
                Returns the vector (W, X, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXXZ">
            <summary>
                Returns the vector (W, X, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXXW">
            <summary>
                Returns the vector (W, X, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXYX">
            <summary>
                Returns the vector (W, X, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXYY">
            <summary>
                Returns the vector (W, X, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXYZ">
            <summary>
                Returns the vector (W, X, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXYW">
            <summary>
                Returns the vector (W, X, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXZX">
            <summary>
                Returns the vector (W, X, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXZY">
            <summary>
                Returns the vector (W, X, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXZZ">
            <summary>
                Returns the vector (W, X, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXZW">
            <summary>
                Returns the vector (W, X, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXWX">
            <summary>
                Returns the vector (W, X, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXWY">
            <summary>
                Returns the vector (W, X, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXWZ">
            <summary>
                Returns the vector (W, X, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WXWW">
            <summary>
                Returns the vector (W, X, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYXX">
            <summary>
                Returns the vector (W, Y, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYXY">
            <summary>
                Returns the vector (W, Y, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYXZ">
            <summary>
                Returns the vector (W, Y, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYXW">
            <summary>
                Returns the vector (W, Y, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYYX">
            <summary>
                Returns the vector (W, Y, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYYY">
            <summary>
                Returns the vector (W, Y, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYYZ">
            <summary>
                Returns the vector (W, Y, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYYW">
            <summary>
                Returns the vector (W, Y, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYZX">
            <summary>
                Returns the vector (W, Y, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYZY">
            <summary>
                Returns the vector (W, Y, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYZZ">
            <summary>
                Returns the vector (W, Y, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYZW">
            <summary>
                Returns the vector (W, Y, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYWX">
            <summary>
                Returns the vector (W, Y, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYWY">
            <summary>
                Returns the vector (W, Y, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYWZ">
            <summary>
                Returns the vector (W, Y, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WYWW">
            <summary>
                Returns the vector (W, Y, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZXX">
            <summary>
                Returns the vector (W, Z, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZXY">
            <summary>
                Returns the vector (W, Z, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZXZ">
            <summary>
                Returns the vector (W, Z, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZXW">
            <summary>
                Returns the vector (W, Z, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZYX">
            <summary>
                Returns the vector (W, Z, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZYY">
            <summary>
                Returns the vector (W, Z, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZYZ">
            <summary>
                Returns the vector (W, Z, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZYW">
            <summary>
                Returns the vector (W, Z, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZZX">
            <summary>
                Returns the vector (W, Z, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZZY">
            <summary>
                Returns the vector (W, Z, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZZZ">
            <summary>
                Returns the vector (W, Z, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZZW">
            <summary>
                Returns the vector (W, Z, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZWX">
            <summary>
                Returns the vector (W, Z, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZWY">
            <summary>
                Returns the vector (W, Z, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZWZ">
            <summary>
                Returns the vector (W, Z, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WZWW">
            <summary>
                Returns the vector (W, Z, W, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWXX">
            <summary>
                Returns the vector (W, W, X, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWXY">
            <summary>
                Returns the vector (W, W, X, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWXZ">
            <summary>
                Returns the vector (W, W, X, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWXW">
            <summary>
                Returns the vector (W, W, X, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWYX">
            <summary>
                Returns the vector (W, W, Y, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWYY">
            <summary>
                Returns the vector (W, W, Y, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWYZ">
            <summary>
                Returns the vector (W, W, Y, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWYW">
            <summary>
                Returns the vector (W, W, Y, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWZX">
            <summary>
                Returns the vector (W, W, Z, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWZY">
            <summary>
                Returns the vector (W, W, Z, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWZZ">
            <summary>
                Returns the vector (W, W, Z, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWZW">
            <summary>
                Returns the vector (W, W, Z, W).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWWX">
            <summary>
                Returns the vector (W, W, W, X).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWWY">
            <summary>
                Returns the vector (W, W, W, Y).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWWZ">
            <summary>
                Returns the vector (W, W, W, Z).
            </summary>
        </member>
        <member name="P:SpaceEngine.Core.Numerics.Vector4d.WWWW">
            <summary>
                Returns the vector (W, W, W, W).
            </summary>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified value.
            </summary>
            <param name="value">The value that will be assigned to all components.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(SpaceEngine.Core.Numerics.Vector2d,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified vector and values.
            </summary>
            <param name="value">A vector containing the values with which to initialize the X and Y components</param>
            <param name="z">Value for the Z component of the vector.</param>
            <param name="w">Value for the W component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(SpaceEngine.Core.Numerics.Vector3d,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified vector and values.
            </summary>
            <param name="value">A vector containing the values with which to initialize the X, Y and Z components</param>
            <param name="w">Value for the W component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified values.
            </summary>
            <param name="x">Value for the X component of the vector.</param>
            <param name="y">Value for the Y component of the vector.</param>
            <param name="z">Value for the Z component of the vector.</param>
            <param name="w">Value for the W component of the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(System.Double[])">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.#ctor(System.Double[],System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> using the specified array.
            </summary>
            <param name="array">Array of values for the vector.</param>
            <param name="offset">Offset to start copying values from.</param>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_UnaryPlus(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the identity of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The identity of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_UnaryNegation(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the additive inverse of a specified vector.
            </summary>
            <param name="value">A vector.</param>
            <returns>The negative of value.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Addition(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Adds two vectors and returns the result.
            </summary>
            <param name="left">The first value to add.</param>
            <param name="right">The second value to add.</param>
            <returns>The sum of left and right.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Subtraction(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Subtracts one vector from another and returns the result.
            </summary>
            <param name="left">The value to subtract from (the minuend).</param>
            <param name="right">The value to subtract (the subtrahend).</param>
            <returns>The result of subtracting right from left (the difference).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Multiply(SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Returns the product of a vector and scalar.
            </summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Multiply(System.Double,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the product of a scalar and vector.
            </summary>
            <param name="left">The scalar to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Multiply(SpaceEngine.Core.Numerics.Matrix4x4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="left">The matrix to multiply.</param>
            <param name="right">The vector to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Multiply(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Matrix4x4d)">
            <summary>
                Returns the product of a matrix and vector.
            </summary>
            <param name="right">The vector to multiply.</param>
            <param name="left">The matrix to multiply.</param>
            <returns>The product of the left and right parameters.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Division(SpaceEngine.Core.Numerics.Vector4d,System.Double)">
            <summary>
                Divides a vector by a scalar and returns the result.
            </summary>
            <param name="left">The vector to be divided (the dividend).</param>
            <param name="right">The scalar to divide by (the divisor).</param>
            <returns>The result of dividing left by right (the quotient).</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.GetHashCode">
            <summary>
                Returns the hash code for the current <see cref="T:SpaceEngine.Core.Numerics.Vector4d" />.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.Equals(System.Object)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                object have the same value.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>
                true if the obj parameter is a <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> object or a type capable
                of implicit conversion to a <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> object, and its value
                is equal to the current <see cref="T:SpaceEngine.Core.Numerics.Vector4d" /> object; otherwise, false.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.Equals(SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a value that indicates whether the current instance and a specified
                vector have the same value.
            </summary>
            <param name="other">The vector to compare.</param>
            <returns>true if this vector and value have the same value; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Equality(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a value that indicates whether two vectors are equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.op_Inequality(SpaceEngine.Core.Numerics.Vector4d,SpaceEngine.Core.Numerics.Vector4d)">
            <summary>
                Returns a value that indicates whether two vectors are not equal.
            </summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>true if the left and right are not equal; otherwise, false.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.ToString">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form.
            </summary>
            <returns>The string representation of the current instance in Cartesian form.</returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.ToString(System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified culture-specific
                formatting information.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by provider.
            </returns>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.ToString(System.String)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format for its components.
                formatting information.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <returns>The string representation of the current instance in Cartesian form.</returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
        <member name="M:SpaceEngine.Core.Numerics.Vector4d.ToString(System.String,System.IFormatProvider)">
            <summary>
                Converts the value of the current vector to its equivalent string
                representation in Cartesian form by using the specified format and culture-specific
                format information for its components.
            </summary>
            <param name="format">A standard or custom numeric format string.</param>
            <param name="provider">A format provider.</param>
            <returns>
                The string representation of the current instance in Cartesian form, as specified
                by format and provider.
            </returns>
            <exception cref="T:System.FormatException">format is not a valid format string.</exception>
        </member>
    </members>
</doc>
